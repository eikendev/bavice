#!/usr/bin/env bash

# https://stackoverflow.com/a/35800451
set -o errexit
set -o errtrace

SCRIPT_NAME='Bavice'
CONFIG_PATH="${XDG_CONFIG_HOME:-$HOME/.config}/bavice"

exec 1> >(logger -t "$SCRIPT_NAME") 2>&1

# Dummy functions. Can be redefined in the configuration.
function pre_backup() { :; }
function post_backup() { :; }

if [[ -f "$CONFIG_PATH/env.sh" ]]; then
	printf "%s\n" 'Sourcing local environment.'
	# shellcheck source=/dev/null
	source "$CONFIG_PATH/env.sh"
else
	printf "%s\n" 'Cannot source local environment.'
	exit 1
fi

if [[ -f "$CONFIG_PATH/hooks.sh" ]]; then
	printf "%s\n" 'Sourcing local hooks.'
	# shellcheck source=/dev/null
	source "$CONFIG_PATH/hooks.sh"
fi

if [ -z "$PUSHBITS_HOSTNAME" ]; then
	printf "%s\n" 'No hostname for PushBits instance was supplied!'
	exit 1
fi

if [ -z "$PUSHBITS_TOKEN" ]; then
	printf "%s\n" 'No application token for PushBits was supplied!'
	exit 1
fi

function error_exit() {
	printf "%s\n" 'An error occurred.'

	printf "%s\n" 'Running post-backup hook.'
	post_backup

	printf "%s\n" 'Sending a notification via PushBits.'
	curl -q -s -S -L "https://$PUSHBITS_HOSTNAME/message?token=$PUSHBITS_TOKEN" \
		-F 'title=Error during backup service routine' \
		-F 'message=An error occured during backing up a device with Bavice.' \
		-F 'priority=5'
}

trap error_exit ERR

function create_backup() {
	restic backup --files-from "$CONFIG_PATH/files.txt"
}

function prune_repository() {
	restic forget --prune               \
		--keep-daily    7               \
		--keep-weekly   4               \
		--keep-monthly  6               \
		--keep-yearly   1               \
	;
}

function push_timestamp() {
	local hostname
	hostname="$(hostname -s)"
	printf "%s\n" "bavice,host=$hostname last_backup=$(date +%s%N)" > '/usr/local/share/telegraf/bavice_last_backup'
}

printf "%s\n" 'Running pre-backup hook.'
pre_backup

printf "%s\n" 'Creating backup.'
create_backup

printf "%s\n" 'Pruning repository.'
prune_repository

printf "%s\n" 'Running post-backup hook.'
post_backup

printf "%s\n" 'Pushing backup timestamp.'
push_timestamp

printf "%s\n" 'Backup service routine successful.'

# Without this sleep some lines might not get logged. Weird stuff.
sleep 1
